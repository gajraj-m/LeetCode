class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        List<String> res = new ArrayList<>();
        Map<String, Integer> map = new HashMap<>();
        
        // put words and their frequencies
        for(String w : words) map.put(w, map.getOrDefault(w, 0)+1);
        
        // min heap for frequency. if frequency same then 
        PriorityQueue<String> pq = new PriorityQueue<>((a, b) -> 
                map.get(a) == map.get(b) ? b.compareTo(a) : map.get(a)-map.get(b)
        );
        
        for(Map.Entry<String, Integer> e : map.entrySet()){
            pq.add(e.getKey());
            if(pq.size() > k) pq.poll();
        }
        while(k-- > 0) res.add(pq.poll());
        reverse(res);
        return res;
    }
    private void reverse(List<String> res){
        int i = 0, j = res.size()-1;
        while(i < j){
            String temp = res.get(i);
            res.set(i, res.get(j));
            res.set(j, temp);
            i++;
            j--;
        }
    }
}
