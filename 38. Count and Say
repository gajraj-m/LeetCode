// Recursive Code

class Solution {
    public String countAndSay(int n) {
        if(n == 1) return "1";
        String sub = countAndSay(n-1);
        StringBuilder sb = new StringBuilder();
        int i = 1, l = sub.length(), count = 1;
        while(i < l){
            if(sub.charAt(i) == sub.charAt(i-1)) count++;
            else {
                sb.append(String.valueOf(count*10 + sub.charAt(i-1)-'0'));
                count = 1;
            }
            i++;
        }
        sb.append(String.valueOf(count*10 + sub.charAt(i-1)-'0'));
        sub = sb.toString();
        return sub;
    }
}


// Iterative code

class Solution {
    public String countAndSay(int n) {
        String sub = "1";
        while(n-- > 1){
            StringBuilder sb = new StringBuilder();
            int i = 1, l = sub.length(), count = 1;
            while(i < l){
                if(sub.charAt(i) == sub.charAt(i-1)) count++;
                else {
                    sb.append(String.valueOf(count*10 + sub.charAt(i-1)-'0'));
                    count = 1;
                }
                i++;
            }
            sb.append(String.valueOf(count*10 + sub.charAt(i-1)-'0'));
            sub = sb.toString();
        }            
        return sub;
    }
}
